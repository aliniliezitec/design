// *************************************************
// XL button
.btn-xl {
  padding: pixelToRem(15px) pixelToRem(20px);
  font-size: 1.2rem;
  font-weight: $font-weight-bold;
  border-radius: pixelToRem(7px);
}

// *************************************************
// Close button for modals
.close {
  &:focus {
    outline: none;
  }
}

// *************************************************
// btn text only
.btn-text-only {
  color: var(--primary);
  background-color: transparent;
  border-color: transparent;
  font-weight: $font-weight-semibold;

  &:hover {
    color: var(--primary);
    background-color: var(--light-blue);
  }

  &.focus,
  &:focus {
    box-shadow: none;
    border-color: transparent;
    outline: none;
  }

  &.disabled,
  &:disabled {
    color: var(--text-muted);
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show>&.dropdown-toggle {
    background-color: #a0a5ff;
  }

  &:not(:disabled):not(.disabled):active:focus,
  &:not(:disabled):not(.disabled).active:focus,
  .show>&.dropdown-toggle:focus {
    box-shadow: 0 0 0 0.2rem #a0a5ff;
  }
}

// *************************************************
// Custom button-outline no bg color on hover
@mixin button-outline-only-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;
  //   @include hover() {
  //     color: $color-hover;
  //     background-color: $active-background;
  //     border-color: $active-border;
  //   }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show>&.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {

      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow !=none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      }

      @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// Alternate custom buttons
@each $color,
$value in $theme-colors {
  .btn-outline-only-#{$color} {
    @include button-outline-only-variant($value);
  }
}

// *************************************************
// btn flip for condensed/relaxed
.btn-flip {
  min-width: 60px;
  color: var(--text-primary-light);
  padding: 4px 7px;
  font-size: pixelToRem(10px);
  background-color: var(--white);
  box-shadow: 0 1px 3px 0 #c8cfe9;
}

.btn-flip.flipped {
  color: var(--white);
  background-color: var(--text-primary-light);
}

.btn-flip.disabled,
.btn-flip:disabled {
  color: #fff;
  background-color: var(--text-muted);
  border-color: var(--text-muted);
}


// *************************************************
// Buttons
.btn {
  transition: all .2s ease-in-out;
}

// btn transition
.nao-btn-transition:hover {
  box-shadow: 0 0.5rem 0.5rem -0.4rem var(--border-lightest);
  transform: translateY(-0.1rem);
}

.nao-btn-transition:disabled {
  box-shadow: 0 0.5rem 0.5rem -0.4rem var(--border-lightest);
  transform: none;
}

.nao-btn-transition:focus,
.nao-btn-transition.focus {
  box-shadow: 0 0.5rem 0.5rem -0.4rem var(--border-lightest);
  transform: translateY(-0.1rem);
}